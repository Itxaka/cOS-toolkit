name: Build cOS
on:
  push:
    paths:
    - 'conf/**'
    - 'packages/**'
    - '.github/workflows/**'
    - 'Makefile'
  pull_request:
    paths:
    - 'conf/**'
    - 'packages/**'
    - '.github/workflows/**'
    - 'Makefile'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - run: |
        git fetch --prune --unshallow

    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1

    # We patch docker to use all the HD available in GH action free runners
    - name: Patch Docker Daemon data-root
      run: |
        DOCKER_DATA_ROOT='/mnt/var/lib/docker'
        DOCKER_DAEMON_JSON='/etc/docker/daemon.json'
        sudo mkdir -p "${DOCKER_DATA_ROOT}"
        jq --arg dataroot "${DOCKER_DATA_ROOT}" '. + {"data-root": $dataroot}' "${DOCKER_DAEMON_JSON}" > "/tmp/docker.json.tmp"
        sudo mv "/tmp/docker.json.tmp" "${DOCKER_DAEMON_JSON}"
        sudo systemctl restart docker

    - name: Login to DockerHub Registry
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Set Push options
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo "BUILD_ARGS=--push --only-target-package --pull" >> $GITHUB_ENV

    - name: Install deps
      run: |
        sudo -E make deps

    - name: Validate ðŸŒ³
      run: |
        make validate

    - name: Build packages ðŸ”§
      run: |
        sudo -E make build
        ls -liah $PWD/build

    - name: Publish to DockerHub ðŸš€
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
        sudo -E make publish-repo
    - name: Upload results
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build
  iso:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Download result for build
      uses: actions/download-artifact@v2
      with:
        name: build
        path: build
    - name: Install deps
      run: |
        sudo apt-get update
        sudo apt-get install -y squashfs-tools
        sudo -E make deps
    - name: Build ISO ðŸ”§
      run: |
        sudo -E make local-iso
        COS_VERSION=$(yq r packages/cos/definition.yaml 'version')
        mv *.iso cOS-$COS_VERSION.iso
        mv *.sha256 cOS-$COS_VERSION.iso.sha256
    - uses: actions/upload-artifact@v2
      with:
        name: ISO
        path: |
          *.iso
          *.sha256
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: build-log
        path: isowork/*.log

  qemu:
      runs-on: ubuntu-latest
      needs: iso
      steps:
      - uses: actions/checkout@v2
      - name: Download ISO
        uses: actions/download-artifact@v2
        with:
          name: ISO

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-system qemu-kvm
          sudo -E make deps
          sudo luet install -y utils/packer

      - name: Build QEMU Image ðŸ”§
        run: |
          COS_VERSION=$(yq r packages/cos/definition.yaml 'version')
          ISO=$PWD/cOS-$COS_VERSION.iso PACKER_ARGS="-var='accellerator=none' -var='sleep=5m' -only qemu" make packer
      - uses: actions/upload-artifact@v2
        with:
          name: QEMU
          path: |
            packer/*-qemu.tar.gz
