name: build
on:
  workflow_dispatch: # for triggering it manually
  schedule:
    - cron:  '0 20 * * *'
  push:
    branches:
      - master
  pull_request:
    paths:
      - 'conf/**'
      - 'packages/**'
      - 'make/**'
      - '.github/**'
      - 'Makefile'
      - 'tests/**'
  create:
    tags:
      - v*

concurrency: 
  group: ci-${{ github.head_ref || github.ref }}-${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: "opensuse"
          - flavor: "fedora"
          - flavor: "ubuntu"
    env:
      FLAVOR: ${{ matrix.flavor }}
    steps:
      - uses: actions/checkout@v2

      - run: |
          git fetch --prune --unshallow

      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master

      - name: Login to Quay Registry
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io

      - name: Set Push options
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: echo "BUILD_ARGS=--push --no-spinner --live-output --pull" >> $GITHUB_ENV

      - name: "Set PR options"
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "BUILD_ARGS=--no-spinner --only-target-package --live-output --pull" >> $GITHUB_ENV

      - name: "Set Branches options"
        if: ${{ github.event_name == 'push' && github.ref != 'refs/heads/master' }}
        run: echo "BUILD_ARGS=--no-spinner --only-target-package --live-output --pull" >> $GITHUB_ENV

      - name: Install deps
        run: |
          sudo -E make deps
          sudo -E luet install --no-spinner -y --config .github/.luet.yaml toolchain/luet-mtree

      - name: Validate ðŸŒ³
        run: |
          make validate

      - name: Build packages ðŸ”§
        run: |
          sudo -E make build
          ls -liah $PWD/build
          sudo chmod -R 777 $PWD/build
      - name: Generate manifests
        run: |
          for f in build/*tar*; do
            sudo -E luet mtree -- generate $f -o "$f.mtree"
          done
      - name: Append manifests to metadata
        run: |
          for f in build/*mtree; do
            BASE_NAME=`basename -s .package.tar.zst.mtree $f`
            sudo -E .github/append_manifests.py build/$BASE_NAME.metadata.yaml $f mtree
          done
      - name: Create repo
        run: |
          sudo -E make create-repo
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.flavor }}
          path: build
          if-no-files-found: error

      - name: Run iso workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: iso
          # We need a personal access token for triggering workflow with workflow_dispatch see: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
          token: ${{ secrets.PERSONAL_TOKEN }}
          # This allows workflows chained to use the original PR ref for all their actions
          # Otherwise if no ref is passed, the MASTER head ref is passed, which wrongly runs everything from master
          # We also fallback to github.ref in case we are calling this from master
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
      - name: Run iso-nosquashfs workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: nosquashfs
          token: ${{ secrets.PERSONAL_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
      - name: Run raw-image workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: raw-image
          token: ${{ secrets.PERSONAL_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}