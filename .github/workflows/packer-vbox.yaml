name: packer-vbox
on:
  workflow_dispatch: # for triggering it manually

concurrency:
  group: ci-${{ github.head_ref || github.ref }}-${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  vbox:
    runs-on: macos-10.15
    strategy:
      matrix:
        include:
          - flavor: "opensuse"
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Set pending
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: ${{ github.workflow }}
          description: 'Build the vbox box'
          state: 'pending'
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: iso
          commit: ${{ github.sha }}
          name: cOS-${{ matrix.flavor }}.iso.zip
      - name: Build VBox Image ðŸ”§
        run: |
          PACKER_ARGS="-var='feature=vagrant' -only virtualbox-iso" make packer
      - uses: actions/upload-artifact@v2
        with:
          name: cOS-${{ matrix.flavor }}.ova
          path: |
            packer/*.tar.gz
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: cOS-${{ matrix.flavor }}-vbox.box
          path: |
            packer/*.box
          if-no-files-found: error
      - name: Set success
        if: success()
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: ${{ github.workflow }}
          description: 'Build the vbox box'
          state: 'success'
      - name: Set failure
        if: failure()
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: ${{ github.workflow }}
          description: 'Build the vbox box'
          state: 'failure'

      - name: Invoke workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: test
          token: ${{ secrets.PERSONAL_TOKEN }}