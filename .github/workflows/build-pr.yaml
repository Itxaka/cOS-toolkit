
name: Build cOS Pull requests

on: 
 pull_request:
   paths:
     - conf/**
     - packages/**
     - make/**
     - .github/**
     - Makefile
     - tests/**


concurrency:
  group: ci-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:



  build-opensuse:
  
    runs-on: ubuntu-latest
  
    env:
      FLAVOR: opensuse
      FINAL_REPO: quay.io/testitxaka/releases-opensuse
      DOWNLOAD_METADATA: false
      PUSH_CACHE: false
    steps:



      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16


      - uses: actions/checkout@v2


      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
  

  

      - name: Install deps
        run: |
          sudo -E make deps

      - name: Validate ðŸŒ³
        run: |
          make validate

      - name: Build packages ðŸ”§
        run: |
          export PATH=$PATH:/usr/local/go/bin
          mkdir build || true
          pushd ./.github
          go build -o build
          popd
          ./.github/build
          ls -liah $PWD/build
          sudo chmod -R 777 $PWD/build
  
      - name: Create repo
        run: |
          sudo -E make create-repo
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: build-opensuse
          path: build
          if-no-files-found: error

  publish-opensuse:
    runs-on: ubuntu-latest
    outputs:
      publish: ${{ steps.publish.outputs.publish }}
    env:
      FLAVOR: opensuse
      FINAL_REPO: quay.io/testitxaka/releases-opensuse
      DOWNLOAD_METADATA: false
      PUSH_CACHE: false
    needs: build-opensuse
    steps:
      - uses: actions/checkout@v2
      - name: Download result for build
        uses: actions/download-artifact@v2
        with:
          name: build-opensuse
          path: build
      - run: |
          git fetch --prune --unshallow

      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master

      # We patch docker to use all the HD available in GH action free runners
      - name: Patch Docker Daemon data-root
        run: |
          DOCKER_DATA_ROOT='/mnt/var/lib/docker'
          DOCKER_DAEMON_JSON='/etc/docker/daemon.json'
          sudo mkdir -p "${DOCKER_DATA_ROOT}"
          jq --arg dataroot "${DOCKER_DATA_ROOT}" '. + {"data-root": $dataroot}' "${DOCKER_DAEMON_JSON}" > "/tmp/docker.json.tmp"
          sudo mv "/tmp/docker.json.tmp" "${DOCKER_DAEMON_JSON}"
          sudo systemctl restart docker


      - name: Login to Quay Registry
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io


      - name: Install deps
        run: |
          sudo -E make deps

      - name: Install Go
        uses: actions/setup-go@v2

      - name: Grab metadata from remotes
        run: |
          export PATH=$PATH:/usr/local/go/bin
          pushd ./.github
          go build -o build
          popd
          sudo -E ./.github/build
          ls -liah $PWD/build
      - name: Publish to DockerHub ðŸš€
        id: publish
        run: |
          sudo -E make publish-repo 2>&1 | tee test.log
          result_code=${PIPESTATUS[0]}
          echo "::set-output name=publish::$(cat test.log)"
          exit $result_code  # This is the original status code from the command




  test-outputs:
    runs-on: ubuntu-latest
    outputs:
      publish: ${{ steps.publish.outputs.publish }}

    needs: publish-opensuse
    steps:
      - run: echo ${{needs.publish-opensuse.outputs.publish}}